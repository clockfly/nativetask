<?xml version="1.0"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!-- 
Before you can run these subtargets directly, you need 
to call at top-level: ant deploy-contrib compile-core-test
-->
<!-- native task -->
<project name="nativetask" default="compile">

<property name="src.dir"  location="${basedir}/src/main/java"/>

		 
  <import file="../build-contrib.xml"/>
  
<property name="systemtest.jar.name" value="${build.test.system}/hadoop-${name}-systemtest-${version}.jar" />  
<property name="systemtest.conf" value="${build.test.system}/conf" />  
<property name="systemtest.lib" value="${build.test.system}/lib" />
<property name="systemtest.source.conf" value="${src.test.system}/conf" />

  <property name="build.native" 
         value="${dist.dir}/lib/native/${build.platform}"/>
  
  <target name="compile-nativetask">
    <exec executable="sh" dir="${basedir}/src/main/native">
      <arg value="${basedir}/src/main/native/build.sh"/>
      <arg value="all"/>
    </exec>
  </target>
  
    <target name="clean-nativetask">
    <exec executable="sh" dir="${basedir}/src/main/native">
      <arg value="${basedir}/src/main/native/build.sh"/>
      <arg value="clean"/>
    </exec>
  </target>
  
  <target name="init-contrib">
	<mkdir dir="${build.dir}"/>
  	<mkdir dir="${build.dir}/sdk"/>
	<mkdir dir="${build.classes}"/>
	<mkdir dir="${build.test}"/>
	<!-- The below two tags  added for contrib system tests -->
	<mkdir dir="${build.test.system}"/>
	<mkdir dir="${build.system.classes}"/> 
	<mkdir dir="${build.examples}"/>
	<mkdir dir="${hadoop.log.dir}"/>
	
	<mkdir dir="${hadoop.root}/build-fi/system/classes"/>
	<mkdir dir="${hadoop.root}/build-fi/system/test/classes"/>
	<mkdir dir="${hadoop.root}/build-fi"/>
	<mkdir dir="${hadoop.root}/build-fi/tools"/>
	<mkdir dir="${hadoop.root}/build-fi/test/classes"/>
	<mkdir dir="${hadoop.root}/build-fi/system"/>
	<mkdir dir="${hadoop.root}/build-fi/test/testjar"/>
	<mkdir dir="${systemtest.conf}"/>
	<mkdir dir="${systemtest.lib}"/>
  </target>	
  
  <!-- ====================================================== -->
  <!-- Compile a Hadoop contrib's files                       -->
  <!-- ====================================================== -->
  <target name="compile-java" depends="init, ivy-retrieve-common" unless="skip.contrib">
    <echo message="contrib: ${name}"/>
    <javac
     encoding="${build.encoding}"
     srcdir="${src.dir}"
     includes="**/*.java"
     destdir="${build.classes}"
     debug="${javac.debug}"
     deprecation="${javac.deprecation}">
     <classpath refid="contrib-classpath"/>
    </javac>
  </target>

   <target name="compile" depends="compile-java, compile-nativetask">
      <jar jarfile="${build.dir}/hadoop-${name}-${version}.jar"
      basedir="${build.classes}">
  	<manifest>
	    <attribute name="Main-Class" value="org.apache.hadoop.mapred.nativetask.tools.Submitter"/>
	</manifest>
    </jar>
	<!-- copy native task .so files to target -->
	<copy todir="${build.native}/lib/" overwrite="true"   >
      <fileset dir="${basedir}/src/main/native/.libs">
        <exclude name="**/*.o"/>
      </fileset>
    </copy>
	<!-- copy native task .so files to sdk -->
	<copy todir="${build.dir}/sdk/" overwrite="true"   >
      <fileset dir="${basedir}/src/main/native/.libs">
        <exclude name="**/*.o"/>
      	<exclude name="nttest"/>
      </fileset>
      <fileset file="${basedir}/src/main/native/src/NativeTask.h" />
    </copy>
	<!--copy native task plugable test example to sdk-->
    <tar compression="gzip" destfile="${build.dir}/sdk/example.tgz">
      <tarfileset dir="${basedir}/sdk" mode="755"/>
    </tar>
  </target>
  
  <target name="jar-test-system" depends="compile-test-system, jar, jar-examples"
     if="test.system.available">
	<jar destfile="${systemtest.jar.name}">
		<fileset dir="${build.system.classes}" />
	</jar>
		
	<copy todir="${systemtest.conf}" includeEmptyDirs="false" flatten="true"  overwrite="true"  >
          <fileset dir="${systemtest.source.conf}">
          </fileset>
        </copy>

        <copy todir="${build.test.system}/data" includeEmptyDirs="false" flatten="true"  overwrite="true"  >
          <fileset dir="${src.test.system}/data">
          </fileset>
        </copy>

         <copy todir="${systemtest.lib}" includeEmptyDirs="false" flatten="true"  overwrite="true"  >
           <fileset dir="${basedir}/lib">
           </fileset>
        </copy>
	
	<copy todir="${build.test.system}" file="${src.test.system}/build.xml"  overwrite="true"  />	
  </target>  
  
  <!-- ====================================================== -->
  <!-- Package a Hadoop contrib                               -->
  <!-- ====================================================== -->
  <target name="package" depends="jar, jar-examples" unless="skip.contrib">
    <copy todir="${dist.dir}/lib" includeEmptyDirs="false" flatten="true"  overwrite="true"  >
      <fileset dir="${build.dir}">
        <include name="hadoop-${name}-${version}.jar" />
      </fileset>
    </copy>
  </target>
  
  <!-- override clean -->
  <target name="clean" depends="clean-nativetask">
    <echo message="contrib: ${name}"/>
    <delete dir="${build.dir}"/>
  </target>
    
  <!-- ================================================================== -->
  <!-- Run system tests                                                   -->
  <!-- ================================================================== -->
  <target name="test-system" depends="jar-test-system">
    <subant>
         <property name="hadoop.home" value="${hadoop.home}"/>
      <fileset dir="${build.test.system}" includes="build.xml"/>
      <target name="testKV" />
      <target name="testCompress" />
      <target name="testWordCountWithCombiner" />
      <target name="testNonSort"/>
      <target name="report" />
    </subant>
  </target>   

</project>
